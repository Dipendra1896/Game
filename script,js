console.log("Linked")

var canvas = document.getElementById("canvas")
console.log(canvas)
canvas.style.position='fixed';
canvas.style.backgroundColor='blue';
canvas.height=window.innerHeight;
canvas.width=window.innerWidth;
var pipeVelocity=1.8;
var velocity=0;
var gravity=0.1; 
var score=0;
hasCollided=false;

//getting drawing context
const drawer=canvas.getContext('2d');
var box = {
    top:canvas.height/2,
    left:250,
    width:50 ,
    height:50
};
const pipeHorizontalGap=300;
const pipeVerticalGap = 300;
const pipeWidth = 50;
var pipes = [];
//adding 4 pipes to this array
for(var i=0; i<100;i++){
pipes.push(giveMePipe())};
var pipe = {
    topPipe:{
        top:0,
        left:400,
        width:pipeWidth,
        height:100
    },
    bottomPipe:{
        top:100+pipeVerticalGap,
        left:400,
        width:50,
        height:canvas.height-100-pipeVerticalGap,}
}
var x=0;
var y=0;
setInterval(function () {
    if(hasCollided){
        drawer.fillText("Game Over",canvas.width/2,canvas.height/2)
        setTimeoutO(function()
        
        {
            window.location.reload();
        },2000)
        return;
    }
    velocity =velocity+ gravity;      
    drawer.clearRect(0,0,canvas.width,canvas.height)
    box.top = box.top + velocity ;
    //mathi jana batta rokne
    if(box.top<0){
        box.top=0;
        velocity=0;
        
    }
    //tala khansa nadini
    if(box.top>canvas.height-box.height){
        box.top=canvas.height-box.height
        velocity=0;

    }
    for(var i=0; i<pipes.length; i++){
        var pipe = pipes[i]
        pipe.topPipe.left=pipe.topPipe.left-pipeVelocity
        pipe.bottomPipe.left-=pipeVelocity;
        drawBox(pipe.topPipe,"green")
        drawBox(pipe.bottomPipe,"green")
        if(pipe.topPipe.left<0){
            //remove first pipe from array
            pipes.shift()
             //add new pipeto last of array
            pipes.push(giveMePipe())
            if(!hasCollided)
            score ++;
           // console.log("Score is:"+score)
        }
        checkCollision(pipe.topPipe,box)
        checkCollision(pipe.bottomPipe,box)
        //console.log(pipes)
    }
    //drawing pipe
    // var pipe =giveMePipe();
    // drawBox(pipe.topPipe,"green")
    // drawBox(pipe.bottomPipe,"green")
    drawBox(box,hasCollided? "pink":"red")
    
    drawer.fillStyle='red'
    drawer.font="30px Arial"
    drawer.fillText("Score is:"+score,50,100)
    //drawer.fillRect(x,0,100,100)
    //drawer.fillRect(box.left,box.top,box.width,box.height)
}, 10)
window.addEventListener("keydown",function(e){
    if(e.key==" "){
        velocity=velocity-5 ;

    } 
})
function drawBox(box,color){
    drawer.fillStyle = color;
    drawer.fillRect(box.left,box.top,box.width,box.height)
}
function giveMePipe(){
    var topPipeHeight=giveMeRandomHeight(20,canvas.height-pipeVerticalGap);
    var leftOffset =box.left+300;
    //pipes array empty xa vane 
    if(pipes.length==0){
        //leftOffset change grana parena
     }
        else{var lastPipe=pipes[pipes .length-1]
            leftOffset=lastPipe.topPipe.left+pipeHorizontalGap;

        
    }
    return{
        topPipe:{
            top:0,
            left:leftOffset,
            width:pipeWidth,
            height:topPipeHeight
        },
        bottomPipe:{
            top:topPipeHeight+pipeVerticalGap,
            left:leftOffset,
            width:pipeWidth,
            height:canvas.height-topPipeHeight-pipeVerticalGap,}

    }
};
function giveMeRandomHeight(min,max){
    return Math.floor(Math.random()*(max-min+1))+min;

}   
function checkCollision(box1,box2){
    if(box1.left<box2.left+box2.width && 
        box1.left+box1.width>box2.left &&
        box1.top<box2.top+box2.height && 
        box1.height+box1.top>box2.top){
            hasCollided=true;
        }
}

